{"version":3,"sources":["Game.js","pages/Worker.js","components/NodesTable.js","components/ParameterList.js","components/ScoreChart.js","components/Tile.js","components/GameDisplay.js","pages/Admin.js","App.js","index.js"],"names":["RANDOM_LOWER_BOUND","RANDOM_UPPER_BOUND","RANDOM_MULTIPLIER_UPPER","RANDOM_MULTIPLIER_LOWER","Bike","row","col","Object","classCallCheck","this","Result","winner","loser","loserPoints","winnerPoints","DFS","graph","start","visited","i","length","to_push","j","push","counter","dfs_driver","Genome","g1","g2","closeFreespace","random","closeWallDistance","closeRelativeEnemyX","closeRelativeEnemyY","farFreespace","farWallDistance","farRelativeEnemyX","farRelativeEnemyY","farDFS","closeDFS","currDirection","didWin","grid","low","high","t","Math","position","dfs","myPosition","enemyPosition","currentDirection","ratingS","ratingL","ratingR","isFar","sqrt","pow","relativeX","relativeY","moveL","moveR","bikeS","bikeL","bikeR","distanceToNearestObstacle","freeSpacesAtIndex","isValidMove","b","r","c","state","curr","direction","abs","x","y","res","b1","b2","Tron","setGrid","bike1Row","bike1Column","bike2Row","bike2Column","bike1Direction","bike2Direction","bike1Dead","bike2Dead","bike1Length","bike2Length","gameOver","move","s","p","column","firstMove","secondMove","move1","nextMove","move2","makeMove","Header","Layout","Content","Worker","Footer","Sider","props","_this","possibleConstructorReturn","getPrototypeOf","call","status","clientIds","UUID","tasks","progressPercentage","fixedG1","fixedG2","loseFreespace","returnWinner","data","_this2","genomes","computed","playGame","console","log","concat","setTimeout","socket","emit","setState","_this3","on","compute","react_default","a","createElement","layout","className","menu","theme","mode","defaultSelectedKeys","style","lineHeight","progress","percent","width","padding","background","minHeight","textAlign","Component","columns","title","dataIndex","key","render","text","tag","color","NodesTable","_ref","rawData","map","raw","id","browser","userAgent","split","table","dataSource","FormItem","Form","Item","EditableContext","React","createContext","EditableFormRow","create","form","index","objectWithoutProperties","Provider","value","EditableCell","editing","toggleEdit","input","focus","handleClickOutside","e","cell","target","contains","save","_this$props","record","handleSave","validateFields","error","values","objectSpread","editable","document","addEventListener","removeEventListener","_this$props2","restProps","assign","ref","node","Consumer","margin","getFieldDecorator","rules","required","message","initialValue","onPressEnter","paddingRight","onClick","children","ParameterList","handleDelete","toConsumableArray","filter","item","handleAdd","_this3$state","count","newData","name","age","findIndex","splice","popconfirm","onConfirm","href","_this4","components","body","onCell","display","flexDirection","paddingTop","es_button","type","marginBottom","right","rowClassName","bordered","ScoreChart","visitData","points","max","point","Charts","total","contentHeight","line","height","Tile","fill","lib_default","Rect","GameDisplay","tiles","components_Tile","tile","TextArea","Input","Admin","returnWinnerGrids","executedButton","dataPoints","generation","logs","str","Admin_Header","Admin_Content","Admin_Sider","components_NodesTable","components_ScoreChart","paddingLeft","components_GameDisplay","rows","formatData","placeholder","float","executeCallback","ParameterList_ParameterList","Admin_Footer","App","io","usersOnline","myProgress","BrowserRouter","Route","path","exact","Worker_Worker","Admin_Admin","execute","ReactDOM","App_App","getElementById"],"mappings":"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","file":"static/js/main.49d93e3b.chunk.js","sourcesContent":["const RANDOM_LOWER_BOUND = -10;\nconst RANDOM_UPPER_BOUND = 10;\nconst RANDOM_MULTIPLIER_UPPER = 1.8;\nconst RANDOM_MULTIPLIER_LOWER = 0.2;\n\nclass Bike {\n  constructor(row, col) {\n    this.row = row;\n    this.col = col;\n  }\n}\n\nclass Result {\n  constructor(winner, loser) {\n    this.winner = winner;\n    this.loser = loser;\n    this.loserPoints = 0;\n    this.winnerPoints = 0;\n  }\n}\n\nclass DFS {\n  constructor(graph, start) {\n    this.graph = graph;\n    this.start = start;\n    this.visited = [];\n    for (let i = 0; i < graph.length; i++) {\n      let to_push = [];\n      for (let j = 0; j < graph[0].length; j++) {\n        to_push.push(false);\n      }\n      this.visited.push(to_push);\n    }\n    this.counter = 0;\n    this.start = start;\n  }\n\n  dfs() {\n    this.dfs_driver(this.graph, this.start);\n    return this.counter;\n  }\n\n  dfs_driver(graph, start) {\n    if (start.row < 1 || start.col < 1 || start.row >= 16 || start.col >= 17)\n      return;\n    if (this.visited[start.row][start.col]) return;\n    let c = graph[start.row][start.col];\n\n    if (c !== \".\") return;\n    this.counter++;\n\n    this.visited[start.row][start.col] = true;\n\n    this.dfs_driver(graph, new Bike(start.row - 1, start.col));\n    this.dfs_driver(graph, new Bike(start.row + 1, start.col));\n    this.dfs_driver(graph, new Bike(start.row, start.col - 1));\n    this.dfs_driver(graph, new Bike(start.row, start.col + 1));\n  }\n}\n\nclass Genome {\n  constructor(g1, g2) {\n    if (g1 && g2) {\n      this.closeFreespace = this.random(g1.closeFreespace, g2.closeFreespace);\n      this.closeWallDistance = this.random(\n        g1.closeWallDistance,\n        g2.closeWallDistance\n      );\n      this.closeRelativeEnemyX = [];\n      this.closeRelativeEnemyX.push(\n        this.random(g1.closeRelativeEnemyX[0], g2.closeRelativeEnemyX[0])\n      );\n      this.closeRelativeEnemyX.push(\n        this.random(g1.closeRelativeEnemyX[1], g2.closeRelativeEnemyX[1])\n      );\n      this.closeRelativeEnemyX.push(\n        this.random(g1.closeRelativeEnemyX[2], g2.closeRelativeEnemyX[2])\n      );\n      this.closeRelativeEnemyY = [];\n      this.closeRelativeEnemyY.push(\n        this.random(g1.closeRelativeEnemyY[0], g2.closeRelativeEnemyY[0])\n      );\n      this.closeRelativeEnemyY.push(\n        this.random(g1.closeRelativeEnemyY[1], g2.closeRelativeEnemyY[1])\n      );\n      this.closeRelativeEnemyY.push(\n        this.random(g1.closeRelativeEnemyY[2], g2.closeRelativeEnemyY[2])\n      );\n      this.farFreespace = this.random(g1.farFreespace, g2.farFreespace);\n      this.farWallDistance = this.random(\n        g1.farWallDistance,\n        g2.farWallDistance\n      );\n      this.farRelativeEnemyX = [];\n      this.farRelativeEnemyX.push(\n        this.random(g1.farRelativeEnemyX[0], g2.farRelativeEnemyX[0])\n      );\n      this.farRelativeEnemyX.push(\n        this.random(g1.farRelativeEnemyX[1], g2.farRelativeEnemyX[1])\n      );\n      this.farRelativeEnemyX.push(\n        this.random(g1.farRelativeEnemyX[2], g2.farRelativeEnemyX[2])\n      );\n      this.farRelativeEnemyY = [];\n      this.farRelativeEnemyY.push(\n        this.random(g1.farRelativeEnemyY[0], g2.farRelativeEnemyY[0])\n      );\n      this.farRelativeEnemyY.push(\n        this.random(g1.farRelativeEnemyY[1], g2.farRelativeEnemyY[1])\n      );\n      this.farRelativeEnemyY.push(\n        this.random(g1.farRelativeEnemyY[2], g2.farRelativeEnemyY[2])\n      );\n      this.length = 0;\n      this.farDFS = this.random(g1.farDFS, g2.farDFS);\n      this.closeDFS = this.random(g1.closeDFS, g2.closeDFS);\n    } else if (g1) {\n      this.closeFreespace =\n        g1.closeFreespace *\n        this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER);\n      this.closeWallDistance =\n        g1.closeWallDistance *\n        this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER);\n      this.closeRelativeEnemyX = [];\n      this.closeRelativeEnemyX.push(\n        g1.closeRelativeEnemyX[0] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.closeRelativeEnemyX.push(\n        g1.closeRelativeEnemyX[1] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.closeRelativeEnemyX.push(\n        g1.closeRelativeEnemyX[2] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.closeRelativeEnemyY = [];\n      this.closeRelativeEnemyY.push(\n        g1.closeRelativeEnemyY[0] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.closeRelativeEnemyY.push(\n        g1.closeRelativeEnemyY[1] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.closeRelativeEnemyY.push(\n        g1.closeRelativeEnemyY[2] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.farFreespace =\n        g1.farFreespace *\n        this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER);\n      this.farWallDistance =\n        g1.farWallDistance *\n        this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER);\n      this.farRelativeEnemyX = [];\n      this.farRelativeEnemyX.push(\n        g1.farRelativeEnemyX[0] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.farRelativeEnemyX.push(\n        g1.farRelativeEnemyX[1] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.farRelativeEnemyX.push(\n        g1.farRelativeEnemyX[2] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.farRelativeEnemyY = [];\n      this.farRelativeEnemyY.push(\n        g1.farRelativeEnemyY[0] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.farRelativeEnemyY.push(\n        g1.farRelativeEnemyY[1] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.farRelativeEnemyY.push(\n        g1.farRelativeEnemyY[2] *\n          this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER)\n      );\n      this.length = 0;\n      this.farDFS =\n        g1.farDFS *\n        this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER);\n      this.closeDFS =\n        g1.closeDFS *\n        this.random(RANDOM_MULTIPLIER_UPPER, RANDOM_MULTIPLIER_LOWER);\n    } else {\n      this.closeFreespace = this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND);\n      this.closeWallDistance = this.random(\n        RANDOM_LOWER_BOUND,\n        RANDOM_UPPER_BOUND\n      );\n      this.closeRelativeEnemyX = [];\n      this.closeRelativeEnemyX.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.closeRelativeEnemyX.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.closeRelativeEnemyX.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.closeRelativeEnemyY = [];\n      this.closeRelativeEnemyY.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.closeRelativeEnemyY.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.closeRelativeEnemyY.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.farFreespace = this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND);\n      this.farWallDistance = this.random(\n        RANDOM_LOWER_BOUND,\n        RANDOM_UPPER_BOUND\n      );\n      this.farRelativeEnemyX = [];\n      this.farRelativeEnemyX.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.farRelativeEnemyX.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.farRelativeEnemyX.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.farRelativeEnemyY = [];\n      this.farRelativeEnemyY.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.farRelativeEnemyY.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.farRelativeEnemyY.push(\n        this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND)\n      );\n      this.currDirection = \"u\";\n      this.didWin = false;\n      this.length = 0;\n      this.farDFS = this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND);\n      this.closeDFS = this.random(RANDOM_LOWER_BOUND, RANDOM_UPPER_BOUND);\n    }\n\n    this.grid = [];\n    for (let i = 0; i < 17; i++) {\n      let to_push = [];\n      for (let j = 0; j < 17; j++) {\n        to_push.push(\".\");\n      }\n      this.grid.push(to_push);\n    }\n  }\n\n  random(low, high) {\n    if (low > high) {\n      let t = low;\n      low = high;\n      high = t;\n    }\n    return Math.random() * (high - low + 1) + low;\n  }\n\n  DFS(position, grid) {\n    let dfs = new DFS(grid, position);\n    return dfs.dfs();\n  }\n\n  nextMove(grid, myPosition, enemyPosition, currentDirection) {\n    let ratingS = 0;\n    let ratingL = 0;\n    let ratingR = 0;\n\n    let isFar =\n      Math.sqrt(\n        Math.pow(this.relativeX(myPosition, enemyPosition), 2) +\n          Math.pow(this.relativeY(myPosition, enemyPosition), 2)\n      ) < 6;\n\n    let moveL = \"s\";\n    let moveR = \"s\";\n    let bikeS = new Bike(0, 0);\n    let bikeL = new Bike(0, 0);\n    let bikeR = new Bike(0, 0);\n\n    switch (currentDirection) {\n      case \"u\":\n        moveL = \"l\";\n        moveR = \"r\";\n        bikeS = new Bike(myPosition.row - 1, myPosition.col);\n        bikeL = new Bike(myPosition.row, myPosition.col - 1);\n        bikeR = new Bike(myPosition.row, myPosition.col + 1);\n        break;\n      case \"d\":\n        moveL = \"r\";\n        moveR = \"l\";\n        bikeS = new Bike(myPosition.row + 1, myPosition.col);\n        bikeL = new Bike(myPosition.row, myPosition.col + 1);\n        bikeR = new Bike(myPosition.row, myPosition.col - 1);\n        break;\n      case \"r\":\n        moveL = \"u\";\n        moveR = \"d\";\n        bikeS = new Bike(myPosition.row, myPosition.col + 1);\n        bikeL = new Bike(myPosition.row - 1, myPosition.col);\n        bikeR = new Bike(myPosition.row + 1, myPosition.col);\n        break;\n      case \"l\":\n        moveL = \"d\";\n        moveR = \"u\";\n        bikeS = new Bike(myPosition.row, myPosition.col - 1);\n        bikeL = new Bike(myPosition.row + 1, myPosition.col);\n        bikeR = new Bike(myPosition.row - 1, myPosition.col);\n        break;\n    }\n\n    if (isFar) {\n      ratingS +=\n        this.distanceToNearestObstacle(\n          this.grid,\n          this.myPosition,\n          this.currentDirection\n        ) * this.farWallDistance;\n      ratingL +=\n        this.distanceToNearestObstacle(this.grid, myPosition, moveL) *\n        this.farWallDistance;\n      ratingR +=\n        this.distanceToNearestObstacle(this.grid, myPosition, moveR) *\n        this.farWallDistance;\n      ratingS += this.freeSpacesAtIndex(this.grid, bikeS) * this.farFreespace;\n      ratingL += this.freeSpacesAtIndex(this.grid, bikeL) * this.farFreespace;\n      ratingR += this.freeSpacesAtIndex(this.grid, bikeR) * this.farFreespace;\n      ratingS +=\n        this.relativeX(bikeS, enemyPosition) * this.farRelativeEnemyX[0];\n      ratingL +=\n        this.relativeX(bikeL, enemyPosition) * this.farRelativeEnemyX[1];\n      ratingR +=\n        this.relativeX(bikeR, enemyPosition) * this.farRelativeEnemyX[2];\n      ratingS +=\n        this.relativeY(bikeS, enemyPosition) * this.farRelativeEnemyY[0];\n      ratingL +=\n        this.relativeY(bikeL, enemyPosition) * this.farRelativeEnemyY[1];\n      ratingR +=\n        this.relativeY(bikeR, enemyPosition) * this.farRelativeEnemyY[2];\n      ratingS += this.DFS(bikeS, this.grid) * this.farDFS;\n      ratingL += this.DFS(bikeL, this.grid) * this.farDFS;\n      ratingR += this.DFS(bikeR, this.grid) * this.farDFS;\n    } else {\n      ratingS +=\n        this.distanceToNearestObstacle(\n          this.grid,\n          myPosition,\n          currentDirection\n        ) * this.closeWallDistance;\n      ratingL +=\n        this.distanceToNearestObstacle(this.grid, myPosition, moveL) *\n        this.closeWallDistance;\n      ratingR +=\n        this.distanceToNearestObstacle(this.grid, myPosition, moveR) *\n        this.closeWallDistance;\n      ratingS += this.freeSpacesAtIndex(this.grid, bikeS) * this.closeFreespace;\n      ratingL += this.freeSpacesAtIndex(this.grid, bikeL) * this.closeFreespace;\n      ratingR += this.freeSpacesAtIndex(this.grid, bikeR) * this.closeFreespace;\n      ratingS +=\n        this.relativeX(bikeS, enemyPosition) * this.closeRelativeEnemyX[0];\n      ratingL +=\n        this.relativeX(bikeL, enemyPosition) * this.closeRelativeEnemyX[1];\n      ratingR +=\n        this.relativeX(bikeR, enemyPosition) * this.closeRelativeEnemyX[2];\n      ratingS +=\n        this.relativeY(bikeS, enemyPosition) * this.closeRelativeEnemyY[0];\n      ratingL +=\n        this.relativeY(bikeL, enemyPosition) * this.closeRelativeEnemyY[1];\n      ratingR +=\n        this.relativeY(bikeR, enemyPosition) * this.closeRelativeEnemyY[2];\n      ratingS += this.DFS(bikeS, this.grid) * this.closeDFS;\n      ratingL += this.DFS(bikeL, this.grid) * this.closeDFS;\n      ratingR += this.DFS(bikeR, this.grid) * this.closeDFS;\n    }\n\n    if (!this.isValidMove(bikeS, this.grid)) ratingS -= 200;\n    if (!this.isValidMove(bikeL, this.grid)) ratingL -= 200;\n    if (!this.isValidMove(bikeR, this.grid)) ratingR -= 200;\n\n    if (ratingS >= ratingL && ratingS >= ratingR) {\n      return \"s\";\n    } else if (ratingL >= ratingS && ratingL >= ratingR) {\n      return \"l\";\n    } else {\n      return \"r\";\n    }\n  }\n\n  isValidMove(b, grid) {\n    let r = b.row;\n    let c = b.col;\n\n    if (!(r >= 1 && r <= 15 && c >= 1 && c <= 1)) return false;\n\n    return grid[r][c] === \".\";\n  }\n\n  distanceToNearestObstacle(state, curr, direction) {\n    switch (direction) {\n      case \"u\":\n        for (let i = curr.row - 1; i >= 0; i--) {\n          if (state[i][curr.col] !== \".\") {\n            return Math.abs(curr.row - i - 1);\n          }\n        }\n      case \"d\":\n        for (let i = curr.row + 1; i < state.length; i++) {\n          if (state[i][curr.col] !== \".\") {\n            return Math.abs(i - curr.row - 1);\n          }\n        }\n      case \"l\":\n        for (let i = curr.col - 1; i >= 0; i--) {\n          if (state[curr.row][i] !== \".\") {\n            return Math.abs(curr.col - i - 1);\n          }\n        }\n      case \"r\":\n        for (let i = curr.col + 1; i < state[0].length; i++) {\n          if (state[curr.row][i] !== \".\") {\n            return Math.abs(i - curr.col - 1);\n          }\n        }\n      default:\n        return -1;\n    }\n  }\n\n  freeSpacesAtIndex(state, b) {\n    let x = b.row;\n    let y = b.col;\n\n    let res = 0;\n\n    for (let r = x - 2; r < x + 3; r++) {\n      for (let c = y - 2; c < y + 3; c++) {\n        // validate bounds\n        if (r < 0 || r >= state.length || c < 0 || c >= state.length) continue;\n\n        if (state[r][c] === \".\") res++;\n      }\n    }\n\n    return res;\n  }\n\n  relativeX(b1, b2) {\n    return b2.col - b1.col;\n  }\n\n  relativeY(b1, b2) {\n    return b2.row - b1.row;\n  }\n}\n\nclass Tron {\n  constructor() {\n    this.grid = [];\n    this.setGrid();\n    this.bike1Row = 8;\n    this.bike1Column = 2;\n    this.bike2Row = 8;\n    this.bike2Column = 14;\n    this.bike1Direction = \"r\";\n    this.bike2Direction = \"l\";\n    this.bike1Dead = false;\n    this.bike2Dead = false;\n    this.bike1Length = 0;\n    this.bike2Length = 0;\n    this.gameOver = false;\n    this.move = \" \";\n  }\n\n  setGrid() {\n    for (let i = 0; i < 17; i++) {\n      let to_push = [];\n      for (let j = 0; j < 17; j++) {\n        to_push.push(\".\");\n      }\n      this.grid.push(to_push);\n    }\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[0].length; j++) {\n        this.grid[i][j] = \".\";\n      }\n    }\n    for (let i = 0; i < 17; i++) {\n      this.grid[0][i] = \"w\";\n      this.grid[i][0] = \"w\";\n      this.grid[16][i] = \"w\";\n      this.grid[i][16] = \"w\";\n    }\n    let s = new Bike(8, 14);\n    let p = new Bike(8, 2);\n    this.grid[s.row][s.col] = \"p\";\n    this.grid[p.row][p.col] = \"s\";\n  }\n\n  isValidMove(row, column, direction) {\n    if (direction === \"u\") {\n      if (this.move === \"l\") {\n        if (this.grid[row][column - 1] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"r\") {\n        if (this.grid[row][column + 1] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"s\") {\n        if (this.grid[row - 1][column] !== \".\") {\n          return false;\n        }\n      }\n    } else if (direction === \"d\") {\n      if (this.move === \"l\") {\n        if (this.grid[row][column + 1] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"r\") {\n        if (this.grid[row][column - 1] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"s\") {\n        if (this.grid[row + 1][column] !== \".\") {\n          return false;\n        }\n      }\n    } else if (direction === \"l\") {\n      if (this.move === \"l\") {\n        if (this.grid[row + 1][column] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"r\") {\n        if (this.grid[row - 1][column] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"s\") {\n        if (this.grid[row][column - 1] !== \".\") {\n          return false;\n        }\n      }\n    } else if (direction === \"r\") {\n      if (this.move === \"l\") {\n        if (this.grid[row - 1][column] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"r\") {\n        if (this.grid[row + 1][column] !== \".\") {\n          return false;\n        }\n      } else if (this.move === \"s\") {\n        if (this.grid[row][column + 1] !== \".\") {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  makeMove(firstMove, secondMove) {\n    this.move = firstMove;\n    if (\n      !this.bike1Dead &&\n      this.isValidMove(this.bike1Row, this.bike1Column, this.bike1Direction)\n    ) {\n      this.bike1Length++;\n      if (this.bike1Direction === \"u\") {\n        if (firstMove === \"l\") {\n          this.grid[this.bike1Row][this.bike1Column - 1] = \"s\";\n          this.bike1Column -= 1;\n          this.bike1Direction = \"l\";\n        } else if (firstMove === \"r\") {\n          this.grid[this.bike1Row][this.bike1Column + 1] = \"s\";\n          this.bike1Column += 1;\n          this.bike1Direction = \"r\";\n        } else if (firstMove === \"s\") {\n          this.grid[this.bike1Row - 1][this.bike1Column] = \"s\";\n          this.bike1Row -= 1;\n        }\n      } else if (this.bike1Direction === \"d\") {\n        if (firstMove === \"l\") {\n          this.grid[this.bike1Row][this.bike1Column + 1] = \"s\";\n          this.bike1Column += 1;\n          this.bike1Direction = \"r\";\n        } else if (firstMove === \"r\") {\n          this.grid[this.bike1Row][this.bike1Column - 1] = \"s\";\n          this.bike1Column -= 1;\n          this.bike1Direction = \"l\";\n        } else if (firstMove === \"s\") {\n          this.grid[this.bike1Row + 1][this.bike1Column] = \"s\";\n          this.bike1Row += 1;\n        }\n      } else if (this.bike1Direction === \"l\") {\n        if (firstMove === \"l\") {\n          this.grid[this.bike1Row + 1][this.bike1Column] = \"s\";\n          this.bike1Row += 1;\n          this.bike1Direction = \"d\";\n        } else if (firstMove === \"r\") {\n          this.grid[this.bike1Row - 1][this.bike1Column] = \"s\";\n          this.bike1Row -= 1;\n          this.bike1Direction = \"u\";\n        } else if (firstMove === \"s\") {\n          this.grid[this.bike1Row][this.bike1Column - 1] = \"s\";\n          this.bike1Column -= 1;\n        }\n      } else if (this.bike1Direction === \"r\") {\n        if (firstMove === \"l\") {\n          this.grid[this.bike1Row - 1][this.bike1Column] = \"s\";\n          this.bike1Row -= 1;\n          this.bike1Direction = \"u\";\n        } else if (firstMove === \"r\") {\n          this.grid[this.bike1Row + 1][this.bike1Column] = \"s\";\n          this.bike1Row += 1;\n          this.bike1Direction = \"d\";\n        } else if (firstMove === \"s\") {\n          this.grid[this.bike1Row][this.bike1Column + 1] = \"s\";\n          this.bike1Column += 1;\n        }\n      }\n    } else {\n      this.bike1Dead = true;\n    }\n\n    this.move = secondMove;\n\n    if (\n      !this.bike2Dead &&\n      this.isValidMove(this.bike2Row, this.bike2Column, this.bike2Direction)\n    ) {\n      this.bike2Length++;\n      if (this.bike2Direction === \"u\") {\n        if (secondMove === \"l\") {\n          this.grid[this.bike2Row][this.bike2Column - 1] = \"p\";\n          this.bike2Column -= 1;\n          this.bike2Direction = \"l\";\n        } else if (secondMove === \"r\") {\n          this.grid[this.bike2Row][this.bike2Column + 1] = \"p\";\n          this.bike2Column += 1;\n          this.bike2Direction = \"r\";\n        } else if (secondMove === \"s\") {\n          this.grid[this.bike2Row - 1][this.bike2Column] = \"p\";\n          this.bike2Row -= 1;\n        }\n      } else if (this.bike2Direction === \"d\") {\n        if (secondMove === \"l\") {\n          this.grid[this.bike2Row][this.bike2Column + 1] = \"p\";\n          this.bike2Column += 1;\n          this.bike2Direction = \"r\";\n        } else if (secondMove === \"r\") {\n          this.grid[this.bike2Row][this.bike2Column - 1] = \"p\";\n          this.bike2Column -= 1;\n          this.bike2Direction = \"l\";\n        } else if (secondMove === \"s\") {\n          this.grid[this.bike2Row + 1][this.bike2Column] = \"p\";\n          this.bike2Row += 1;\n        }\n      } else if (this.bike2Direction === \"l\") {\n        if (secondMove === \"l\") {\n          this.grid[this.bike2Row + 1][this.bike2Column] = \"p\";\n          this.bike2Row += 1;\n          this.bike2Direction = \"d\";\n        } else if (secondMove === \"r\") {\n          this.grid[this.bike2Row - 1][this.bike2Column] = \"p\";\n          this.bike2Row -= 1;\n          this.bike2Direction = \"u\";\n        } else if (secondMove === \"s\") {\n          this.grid[this.bike2Row][this.bike2Column - 1] = \"p\";\n          this.bike2Column -= 1;\n        }\n      } else if (this.bike2Direction === \"r\") {\n        if (secondMove === \"l\") {\n          this.grid[this.bike2Row - 1][this.bike2Column] = \"p\";\n          this.bike2Row -= 1;\n          this.bike2Direction = \"u\";\n        } else if (secondMove === \"r\") {\n          this.grid[this.bike2Row + 1][this.bike2Column] = \"p\";\n          this.bike2Row += 1;\n          this.bike2Direction = \"d\";\n        } else if (secondMove === \"s\") {\n          this.grid[this.bike2Row][this.bike2Column + 1] = \"p\";\n          this.bike2Column += 1;\n        }\n      }\n    } else {\n      this.bike2Dead = true;\n    }\n    if (this.bike1Dead && this.bike2Dead) this.gameOver = true;\n  }\n\n  returnWinner(g1, g2) {\n    while (!this.gameOver) {\n      let move1 = g1.nextMove(\n        this.grid,\n        new Bike(this.bike1Row, this.bike1Column),\n        new Bike(this.bike2Row, this.bike2Column),\n        this.bike1Direction\n      );\n      let move2 = g2.nextMove(\n        this.grid,\n        new Bike(this.bike2Row, this.bike2Column),\n        new Bike(this.bike1Row, this.bike1Column),\n        this.bike2Direction\n      );\n      this.makeMove(move1, move2);\n\n      // render ur component (this.grid)\n      // wait 0.3 seconds\n    }\n    g1.length = this.bike1Length;\n    g2.length = this.bike2Length;\n    let result = new Result(\n      g1.length > g2.length ? g1 : g2,\n      g2.length < g1.length ? g2 : g1\n    );\n    return result;\n  }\n\n  returnWinnerGrids(g1, g2) {\n    while (!this.gameOver) {\n      let move1 = g1.nextMove(\n        this.grid,\n        new Bike(this.bike1Row, this.bike1Column),\n        new Bike(this.bike2Row, this.bike2Column),\n        this.bike1Direction\n      );\n      let move2 = g2.nextMove(\n        this.grid,\n        new Bike(this.bike2Row, this.bike2Column),\n        new Bike(this.bike1Row, this.bike1Column),\n        this.bike2Direction\n      );\n      this.makeMove(move1, move2);\n\n    }\n      return this.grid;\n  }\n\n\n}\n\nexport { Genome, Bike, Tron };\n","import React, { Component } from \"react\";\nimport { Input, Layout, Menu, Progress, Row, Col, Tag } from \"antd\";\nimport { Tron, Genome } from \"../Game\";\nimport { runInThisContext } from \"vm\";\nconst { Header, Content, Footer, Sider } = Layout;\n\nexport default class Worker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"Ready\",\n      clientIds: [],\n      UUID: \"Unassigned\",\n      tasks: 0,\n      progressPercentage: 0\n    };\n  }\n\n  playGame(g1, g2) {\n    let fixedG1 = new Genome();\n    let fixedG2 = new Genome();\n\n    fixedG1.loseFreespace = g1.loseFreespace;\n    fixedG1.closeWallDistance = g1.closeWallDistance;\n    fixedG1.closeRelativeEnemyX = g1.closeRelativeEnemyX;\n    fixedG1.closeRelativeEnemyY = g1.closeRelativeEnemyY;\n    fixedG1.farFreespace = g1.farFreespace;\n    fixedG1.farWallDistance = g1.farWallDistance;\n    fixedG1.farRelativeEnemyX = g1.farRelativeEnemyX;\n    fixedG1.farRelativeEnemyY = g1.farRelativeEnemyY;\n    fixedG1.currDirection = g1.currDirection;\n    fixedG1.didWin = false;\n    fixedG1.length = 0;\n    fixedG1.farDFS = g1.farDFS;\n    fixedG1.closeDFS = g1.closeDFS;\n\n    fixedG2.loseFreespace = g2.loseFreespace;\n    fixedG2.closeWallDistance = g2.closeWallDistance;\n    fixedG2.closeRelativeEnemyX = g2.closeRelativeEnemyX;\n    fixedG2.closeRelativeEnemyY = g2.closeRelativeEnemyY;\n    fixedG2.farFreespace = g2.farFreespace;\n    fixedG2.farWallDistance = g2.farWallDistance;\n    fixedG2.farRelativeEnemyX = g2.farRelativeEnemyX;\n    fixedG2.farRelativeEnemyY = g2.farRelativeEnemyY;\n    fixedG2.currDirection = g2.currDirection;\n    fixedG2.didWin = false;\n    fixedG2.length = 0;\n    fixedG2.farDFS = g2.farDFS;\n    fixedG2.closeDFS = g2.closeDFS;\n\n    let tron = new Tron();\n    return tron.returnWinner(fixedG1, fixedG2);\n  }\n\n  compute(data) {\n    const { genomes } = data;\n    let computed = [];\n\n    for (let i = 0; i < genomes.length; i += 2) {\n      let r = this.playGame(genomes[i], genomes[i + 1]);\n      computed.push(r.loser);\n      computed.push(r.winner);\n    }\n    console.log(`Done ${computed.length} tasks.`);\n    console.log(\"Emitting data\");\n    setTimeout(\n      () => this.props.socket.emit(\"doneWork\", computed),\n      Math.random() * 5000\n    );\n    this.setState({\n      status: \"Ready\",\n      tasks: 0\n    });\n  }\n\n  componentWillMount() {\n    const { socket } = this.props;\n    socket.on(\"userUpdate\", clientIds => {\n      this.setState({\n        clientIds\n      });\n    });\n    socket.on(\"currentGenerationProgressUpdate\", progressPercentage => {\n      this.setState({\n        progressPercentage\n      });\n    });\n    socket.on(\"assignWork\", data => {\n      this.setState({\n        status: \"Working\",\n        tasks: data.genomes.length\n      });\n      setTimeout(() => this.compute(data), 3000);\n    });\n    socket.on(\"updateUUID\", UUID => this.setState({ UUID }));\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"2\"]}\n            style={{ lineHeight: \"64px\" }}\n          >\n            <Progress\n              percent={this.state.progressPercentage}\n              style={{ width: 1320 }}\n            />\n          </Menu>\n        </Header>\n\n        <Content style={{ padding: \"0 0px\" }}>\n          <Layout style={{ padding: \"24px 24px\", background: \"#fff\" }}>\n            <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\n              <div style={{ textAlign: \"center\" }}>\n                <h1>UUID: {this.state.UUID}</h1>\n                <h1>Status: {this.state.status}</h1>\n                <h1>Workers Online: {this.state.clientIds.length}</h1>\n                <h1>Tasks: {this.state.tasks}</h1>\n              </div>\n            </Content>\n          </Layout>\n        </Content>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport { Table, Divider, Tag } from \"antd\";\n\nconst columns = [\n  {\n    title: \"UUID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  },\n  {\n    title: \"Browser\",\n    dataIndex: \"browser\",\n    key: \"browser\"\n  },\n  {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: text => (\n      <Tag color={text === \"Working\" ? \"orange\" : \"green\"}>{text}</Tag>\n    )\n  }\n];\n\nconst NodesTable = ({ rawData }) => {\n  let data = [];\n  if (rawData == 0 || !rawData || rawData.length == 0) {\n    data = [];\n  } else {\n    if (rawData) {\n      console.log(rawData);\n      data = rawData.map(raw => ({\n        id: raw.id,\n        browser: raw.userAgent.split(\" \")[0],\n        status: raw.status\n      }));\n    }\n  }\n  return <Table columns={columns} dataSource={data} />;\n};\n\nexport default NodesTable;\n","import React, { Component } from \"react\";\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\n\nconst FormItem = Form.Item;\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false\n  };\n\n  componentDidMount() {\n    if (this.props.editable) {\n      document.addEventListener(\"click\", this.handleClickOutside, true);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.editable) {\n      document.removeEventListener(\"click\", this.handleClickOutside, true);\n    }\n  }\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleClickOutside = e => {\n    const { editing } = this.state;\n    if (editing && this.cell !== e.target && !this.cell.contains(e.target)) {\n      this.save();\n    }\n  };\n\n  save = () => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  render() {\n    const { editing } = this.state;\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      ...restProps\n    } = this.props;\n    return (\n      <td ref={node => (this.cell = node)} {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>\n            {form => {\n              this.form = form;\n              return editing ? (\n                <FormItem style={{ margin: 0 }}>\n                  {form.getFieldDecorator(dataIndex, {\n                    rules: [\n                      {\n                        required: true,\n                        message: `${title} is required.`\n                      }\n                    ],\n                    initialValue: record[dataIndex]\n                  })(\n                    <Input\n                      ref={node => (this.input = node)}\n                      onPressEnter={this.save}\n                    />\n                  )}\n                </FormItem>\n              ) : (\n                <div\n                  className=\"editable-cell-value-wrap\"\n                  style={{ paddingRight: 24 }}\n                  onClick={this.toggleEdit}\n                >\n                  {restProps.children}\n                </div>\n              );\n            }}\n          </EditableContext.Consumer>\n        ) : (\n          restProps.children\n        )}\n      </td>\n    );\n  }\n}\n\nexport default class ParameterList extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: \"variable\",\n        dataIndex: \"name\",\n        width: \"30%\",\n        editable: true\n      },\n      {\n        title: \"value\",\n        dataIndex: \"age\",\n        editable: true\n      },\n      {\n        title: \"operation\",\n        dataIndex: \"operation\",\n        render: (text, record) => {\n          return this.state.dataSource.length >= 1 ? (\n            <Popconfirm\n              title=\"Sure to delete?\"\n              onConfirm={() => this.handleDelete(record.key)}\n            >\n              <a href=\"javascript:;\">Delete</a>\n            </Popconfirm>\n          ) : null;\n        }\n      }\n    ];\n\n    this.state = {\n      dataSource: [\n        {\n          key: \"0\",\n          name: \"mutate\",\n          age: 0.13\n        },\n        {\n          key: \"1\",\n          name: \"genomes\",\n          age: 10000\n        }\n      ],\n      count: 2\n    };\n  }\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n  };\n\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      name: `var`,\n      age: 0.0\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1\n    });\n  };\n\n  handleSave = row => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    this.setState({ dataSource: newData });\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return (\n      <div>\n        <div style={{ display: \"flex\", flexDirection: \"row\", paddingTop: 25 }}>\n          <h1>Parameter List</h1>\n          <Button\n            onClick={this.handleAdd}\n            type=\"primary\"\n            style={{\n              marginBottom: 16,\n              position: \"absolute\",\n              right: 0\n            }}\n          >\n            Add parameter\n          </Button>\n        </div>\n        <Table\n          components={components}\n          rowClassName={() => \"editable-row\"}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n        />\n      </div>\n    );\n  }\n}\n","import {\n  ChartCard,\n  Field,\n  MiniArea,\n  MiniBar,\n  MiniProgress\n} from \"ant-design-pro/lib/Charts\";\nimport React, { Component } from \"react\";\nimport { Bar, Icon, Tooltip } from \"ant-design-pro/lib/Charts\";\nimport Trend from \"ant-design-pro/lib/Trend\";\nimport NumberInfo from \"ant-design-pro/lib/NumberInfo\";\nimport numeral from \"numeral\";\nimport moment from \"moment\";\n\n// const visitData = [];\n// const beginDay = new Date().getTime();\n// for (let i = 0; i < 20; i += 1) {\n//   visitData.push({\n//     x: moment(new Date(beginDay + 1000 * 60 * 60 * 24 * i)).format(\n//       \"YYYY-MM-DD\"\n//     ),\n//     y: Math.floor(Math.random() * 100) + 10\n//   });\n// }\n\nconst ScoreChart = ({ points }) => {\n  let max = -1;\n  let visitData = [];\n  visitData = points.map((point, i) => {\n    if (point > max) max = point;\n    return {\n      x: i,\n      y: point\n    };\n  });\n\n  return (\n    <ChartCard\n      title=\"Length vs Generation\"\n      total={`Peak: ${max}`}\n      contentHeight={max + 60}\n    >\n      <MiniArea line height={max} data={visitData} />\n    </ChartCard>\n  );\n};\n\nexport default ScoreChart;\n","import React from \"react\";\nimport SVG from \"react-svg-draw\";\n\nconst Tile = props => {\n  let fill = \"#FFFFFF\";\n\n  if (props.fill == \"s\") {\n    fill = \"#99C6ED\";\n  } else if (props.fill == \"p\") {\n    fill = \"#D6EAFB\";\n  } else if (props.fill == \"w\") {\n    fill = \"#FAFAFA\";\n  }\n\n  return (\n    <SVG.Rect\n      x={`${props.x * (props.width / 17)}`}\n      y={`${props.y * (props.width / 17)}`}\n      width={`${props.width / 17}`}\n      height={`${props.width / 17}`}\n      style={{ fill }}\n    />\n  );\n};\n\nexport default Tile;\n","import React from \"react\";\nimport SVG from \"react-svg-draw\";\nimport Tile from \"./Tile\";\n\nconst GameDisplay = props => {\n  let tiles = [];\n  for (let i = 0; i < 17; i++) {\n    for (let j = 0; j < 17; j++) {\n      tiles.push(\n        <Tile width={props.width} fill={props.grid[i][j]} x={j} y={i} />\n      );\n    }\n  }\n\n  return (\n    <div>\n      <SVG width={props.width} height={props.width}>\n        {tiles.map(tile => tile)}\n      </SVG>\n    </div>\n  );\n};\n\nexport default GameDisplay;\n","import React, { Component } from \"react\";\nimport { Input, Layout, Menu, Progress } from \"antd\";\nimport NodesTable from \"../components/NodesTable\";\nimport ParameterList from \"../components/ParameterList\";\nimport ScoreChart from \"../components/ScoreChart\";\nimport GameDisplay from \"../components/GameDisplay\";\nimport { Genome, Tron } from \"../Game\";\nconst { Header, Content, Footer, Sider } = Layout;\nconst { TextArea } = Input;\n\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n    let g1 = new Genome();\n    let g2 = new Genome();\n    let t = new Tron();\n    let grid = t.returnWinnerGrids(g1, g2);\n    this.state = {\n      clientIds: 0,\n      executedButton: false,\n      dataPoints: [],\n      generation: 0,\n      logs: [],\n      grid,\n      progressPercentage: 0\n    };\n    this.state.dataPoints.push(0);\n  }\n\n  componentWillMount() {\n    const { socket } = this.props;\n    socket.on(\"userUpdate\", clientIds => {\n      this.setState({\n        clientIds\n      });\n      console.log(clientIds);\n    });\n\n    socket.on(\"dataPointsUpdate\", dataPoints => {\n      this.setState({\n        dataPoints\n      });\n    });\n\n    socket.on(\"currentGenerationProgressUpdate\", progressPercentage => {\n      this.setState({\n        progressPercentage\n      });\n    });\n\n    socket.on(\"logUpdate\", logs => {\n      this.setState({\n        logs\n      });\n    });\n\n    socket.on(\"genomeUpdate\", genomes => {\n      const { g1, g2 } = genomes;\n      console.log(g1);\n      let fixedG1 = new Genome();\n      let fixedG2 = new Genome();\n\n      fixedG1.loseFreespace = g1.loseFreespace;\n      fixedG1.closeWallDistance = g1.closeWallDistance;\n      fixedG1.closeRelativeEnemyX = g1.closeRelativeEnemyX;\n      fixedG1.closeRelativeEnemyY = g1.closeRelativeEnemyY;\n      fixedG1.farFreespace = g1.farFreespace;\n      fixedG1.farWallDistance = g1.farWallDistance;\n      fixedG1.farRelativeEnemyX = g1.farRelativeEnemyX;\n      fixedG1.farRelativeEnemyY = g1.farRelativeEnemyY;\n      fixedG1.currDirection = g1.currDirection;\n      fixedG1.didWin = false;\n      fixedG1.length = 0;\n      fixedG1.farDFS = g1.farDFS;\n      fixedG1.closeDFS = g1.closeDFS;\n\n      fixedG2.loseFreespace = g2.loseFreespace;\n      fixedG2.closeWallDistance = g2.closeWallDistance;\n      fixedG2.closeRelativeEnemyX = g2.closeRelativeEnemyX;\n      fixedG2.closeRelativeEnemyY = g2.closeRelativeEnemyY;\n      fixedG2.farFreespace = g2.farFreespace;\n      fixedG2.farWallDistance = g2.farWallDistance;\n      fixedG2.farRelativeEnemyX = g2.farRelativeEnemyX;\n      fixedG2.farRelativeEnemyY = g2.farRelativeEnemyY;\n      fixedG2.currDirection = g2.currDirection;\n      fixedG2.didWin = false;\n      fixedG2.length = 0;\n      fixedG2.farDFS = g2.farDFS;\n      fixedG2.closeDFS = g2.closeDFS;\n\n      let t = new Tron();\n      let grid = t.returnWinnerGrids(fixedG1, fixedG2);\n      this.setState({\n        grid\n      });\n    });\n  }\n\n  formatData() {\n    const { logs } = this.state;\n    let str = \"\";\n    for (let i = 0; i < logs.length; i++) {\n      str += logs[i] + \"\\n\";\n    }\n    return str;\n  }\n\n  render() {\n    return (\n      <Layout>\n        {!this.state.executedButton ? (\n          <div>\n            <Header>\n              <div className=\"logo\" />\n              <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={[\"2\"]}\n                style={{ lineHeight: \"64px\" }}\n              >\n                <Menu.Item\n                  key=\"3\"\n                  style={{ float: \"right\" }}\n                  onClick={() => {\n                    this.setState({ executedButton: true }, () =>\n                      this.props.executeCallback()\n                    );\n                  }}\n                >\n                  Begin Training\n                </Menu.Item>\n              </Menu>\n            </Header>\n            <Content style={{ padding: \"0 0px\" }}>\n              <Layout style={{ padding: \"24px 24px\", background: \"#fff\" }}>\n                <Sider width={600} style={{ background: \"#fff\" }}>\n                  <h1>Nodes Connected: {this.state.clientIds.length}</h1>\n                  <NodesTable rawData={this.state.clientIds} />\n                  <ParameterList />\n                </Sider>\n                <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\n                  <h1>Evaluation Function</h1>\n                  <TextArea\n                    rows={20}\n                    placeholder={`const f = (x, y) => Math.sqrt(x * x + y * y);`}\n                  />\n                </Content>\n              </Layout>\n            </Content>\n          </div>\n        ) : (\n          <div>\n            <Header>\n              <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={[\"2\"]}\n                style={{ lineHeight: \"64px\" }}\n              >\n                <Progress\n                  percent={this.state.progressPercentage}\n                  style={{ width: 1330 }}\n                />\n              </Menu>\n            </Header>\n            <Content style={{ padding: \"0 0px\" }}>\n              <Layout style={{ padding: \"24px 24px\", background: \"#fff\" }}>\n                <Sider width={600} style={{ background: \"#fff\" }}>\n                  <h1>Nodes Connected: {this.state.clientIds.length}</h1>\n                  <NodesTable rawData={this.state.clientIds} />\n                  <ScoreChart points={this.state.dataPoints} />\n                </Sider>\n                <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\n                  <h1>Current Simulation</h1>\n                  <div\n                    style={{\n                      paddingLeft: 150\n                    }}\n                  >\n                    <GameDisplay grid={this.state.grid} width={500} />\n                  </div>\n                  <h1>Console Logs</h1>\n                  <TextArea\n                    rows={20}\n                    value={this.formatData()}\n                    placeholder={`Loading...`}\n                  />\n                </Content>\n              </Layout>\n            </Content>\n          </div>\n        )}\n\n        <Footer style={{ textAlign: \"center\" }}>\n          Insert Sick Name Here 2018\n        </Footer>\n      </Layout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Worker from \"./pages/Worker\";\nimport Admin from \"./pages/Admin\";\nimport GameDisplay from \"./components/GameDisplay\";\nimport io from \"socket.io-client\";\n\nimport { Genome, Tron } from \"./Game\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const endpoint = \"http://192.168.5.1:3000\";\n    this.socket = io(endpoint);\n    this.state = {\n      usersOnline: 0,\n      myProgress: 0\n    };\n  }\n\n  execute() {\n    this.socket.emit(\"execute\");\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route\n            path=\"/\"\n            exact\n            render={() => <Worker socket={this.socket} />}\n          />\n          <Route\n            path=\"/admin\"\n            render={() => (\n              <Admin\n                socket={this.socket}\n                executeCallback={() => this.execute()}\n              />\n            )}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}